name: Release
on:
  repository_dispatch:
    types: [ published ]
jobs:
  build-arm64:
    name: Build ARM64 Image
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v3.3.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
      - name: Build and push ARM64
        id: build-arm64
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          platforms: linux/arm64
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/receipt-wrangler:${{ github.event.client_payload.version }}-arm64
          build-args: |
            VERSION=${{ github.event.client_payload.version }}
            BUILD_DATE=${{ github.event.client_payload.build-date }}

  build-amd64:
    name: Build AMD64 Image
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v3.3.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
      - name: Build and push AMD64
        id: build-amd64
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          platforms: linux/amd64
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/receipt-wrangler:${{ github.event.client_payload.version }}-amd64
          build-args: |
            VERSION=${{ github.event.client_payload.version }}
            BUILD_DATE=${{ github.event.client_payload.build-date }}

  create-manifest:
    name: Create Multi-Arch Manifest
    needs: [build-arm64, build-amd64]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: int128/docker-manifest-create-action@v2
        with:
          tags: ${{ secrets.DOCKER_USERNAME }}/receipt-wrangler:${{ github.event.client_payload.version }}
          sources: |
            ${{ secrets.DOCKER_USERNAME }}/receipt-wrangler:${{ github.event.client_payload.version }}-amd64
            ${{ secrets.DOCKER_USERNAME }}/receipt-wrangler:${{ github.event.client_payload.version }}-arm64

  cleanup-tags:
    name: Cleanup Architecture-Specific Tags
    needs: [create-manifest]
    runs-on: ubuntu-latest
    steps:
      - name: Delete architecture-specific tags
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
          TOKEN=$(curl -s -X POST -H "Content-Type: application/json" \
            -d "{\"username\": \"${DOCKER_USERNAME}\", \"password\": \"${DOCKER_TOKEN}\"}" \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          # Delete version-specific amd64 tag
          curl -X DELETE \
            -H "Authorization: Bearer ${TOKEN}" \
            "https://hub.docker.com/v2/repositories/${DOCKER_USERNAME}/receipt-wrangler/tags/${{ github.event.client_payload.version }}-amd64/"
          
          # Delete version-specific arm64 tag
          curl -X DELETE \
            -H "Authorization: Bearer ${TOKEN}" \
            "https://hub.docker.com/v2/repositories/${DOCKER_USERNAME}/receipt-wrangler/tags/${{ github.event.client_payload.version }}-arm64/"
